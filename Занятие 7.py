"""splay дерево - собираем в буфер данные и рандомизируем
АВЛ деревья - разность высот слева и справа отличается не более чем на единицу
Разбалансировка может быть двух типов:
          В
    А          | 3|
|1|    |2|     |  |
| |    | |     |  |
| |    | | -------------
| |  ------------------- разность высот 2

1 < A < 2 < B < 3
Длеаем A главным корнем
           A
      |1|         B
      | |    |2|    |3|
      | |    | |    | |


-----------------------------

                 C
           A              |4|
     |1|        B         | |
     | |    |2|   |3| ------------
   -----    | |   | |------------- разница 2

   1 < A < 2< B < 3 < C < 4

поднимаем B

                  B
            A            C
         |1|   |2|   |3|   |4|
         | |   | |   | |   | |
         | |---------------| |

"""

"""Node:
    key
    left, right
    bal = {-1, 0, 1} # правая - левая"""

# Поиск со вставками
"""search(x (key), p (Node), &h (bool)){
    if !p:  p = newNode(x)
    else if (if p[key] > x) { search(x, p[left], h )
                              if (h){
                                    switch(p->bal) 
                                    case 1:
                                        p->bal = 0
                                        h = False
                                        break
                                    case 0:
                                        p->bal = -1
                                        break
                                    case -1: # балансировка
                                        p1 = p ->left  # запомнили указатель
                                        if (p->bal == -1){ LL(p, p1) }
                                        else { LR(p, p1) }
                                    }
                            }
            
              
}"""

# кол-во простое дерево и скип-лист на удаление.